/// <reference types="react" />
interface PaginationTranslations {
    backIconButtonText?: string;
    itemsPerPageLabel?: string;
    nextIconButtonText?: string;
    tooltipForCurrentPage?: string;
    tooltipForShownPagesSelect?: string;
}
export declare type PaginationProps = {
    id?: string;
    currentPageIndex: number;
    itemCount: number;
    itemsPerPage: number;
    itemsPerPageOptions?: number[];
    alwaysShowPagination?: boolean;
    itemDisplayType?: "count" | "page" | "none";
    onPageChange: (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, pageIndex: number) => void;
    onItemsPerPageChange?: (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>, itemsPerPage: number) => void;
    centerNode?: React.ReactNode;
    leftNode?: React.ReactNode;
    rightNode?: React.ReactNode;
} & PaginationTranslations;
export declare type PaginationNavigationProps = {
    totalPages: number;
    paginationRootWidth: number;
} & Pick<PaginationTranslations, "backIconButtonText" | "nextIconButtonText"> & Pick<PaginationProps, "alwaysShowPagination" | "currentPageIndex" | "onPageChange">;
export {};
