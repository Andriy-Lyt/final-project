import { KeyboardEventHandler, MouseEventHandler, ReactElement } from "react";
import { AvatarChipProps } from "./AvatarChip";
import { BasicChipProps } from "./BasicChip";
import { WithinChipContainerProp } from "./ChipTypes";
import { ClosableChipProps } from "./ClosableChip";
import { IconChipProps } from "./IconChip";
declare type WithinChipContainer = typeof WithinChipContainerProp;
/**
 * @typedef AllChipProps
 */
declare type AllChipProps = Omit<AvatarChipProps, WithinChipContainer> | Omit<BasicChipProps, WithinChipContainer> | Omit<ClosableChipProps, WithinChipContainer> | Omit<IconChipProps, WithinChipContainer>;
/**
 * @typedef ChipContainerProps
 * @prop { Array<AllChipProps> } chipProps Array of AllChipProps
 */
export interface ChipContainerProps {
    chipProps: Array<AllChipProps>;
}
/**
 * ChipContainer allows end-user to create various Chips by passing in a {@link ChipContainerProps}
 *
 * @example
 * const props = {
 *    chipProps: [
 *       {
 *         text: "Closable Chip One",
 *         chiptype: "closable",
 *         id: "closable-I",
 *         disabled: true,
 *       },
 *       {
 *         text: "Closable Chip Two with Tooltip",
 *         chiptype: "closable",
 *         id: "closable-II",
 *         tooltip: { label: "Tooltip" },
 *       },
 *   ],
 * }
 * <ChipContainer {...props} />
 *
 * @see https://design.avayacloud.com/components/web/chip-web
 */
export declare const ChipContainer: ({ chipProps }: ChipContainerProps) => JSX.Element;
export declare function createChip<T extends AllChipProps>(chipProp: T, handleClick: MouseEventHandler, keyDownHandler: KeyboardEventHandler, index: number): ReactElement<T> | never;
export {};
